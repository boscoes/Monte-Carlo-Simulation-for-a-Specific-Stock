import yfinance as yf
import numpy as np

def calculate_beta(stock_ticker, market_ticker):
    # Extract historical data
    stock_data = yf.download(stock_ticker, period='1y')
    market_data = yf.download(market_ticker, period='1y')

    # Align the data by date, in case of any errors in the data
    combined_data = stock_data['Close'].to_frame().join(market_data['Close'], lsuffix='_stock', rsuffix='_market', how='inner')

    # Calculate returns
    stock_returns = combined_data['Close_stock'].pct_change().dropna()
    market_returns = combined_data['Close_market'].pct_change().dropna()

    # Calculate covariance and variance
    covariance = np.cov(stock_returns, market_returns)[0, 1]
    variance = np.var(market_returns)

    # Calculate beta
    beta = covariance / variance
    return beta

# Inputs from user in terminal
stock_ticker = input("Enter the stock ticker: ")
market_ticker = input("Enter the market ticker: ")
beta = calculate_beta(stock_ticker, market_ticker)

print(f"The beta of {stock_ticker} relative to {market_ticker} is {beta:.2f}")
